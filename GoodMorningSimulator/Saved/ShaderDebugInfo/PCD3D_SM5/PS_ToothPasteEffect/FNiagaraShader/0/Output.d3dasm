//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   float4 EmitterSpawnInfoOffsets[2]; // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint UpdateStartInstance;          // Offset:  320 Size:     4
//   uint ShaderStageIndex;             // Offset:  324 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  328 Size:     4 [unused]
//   uint SpawnedInstances;             // Offset:  332 Size:     4
//   uint ComponentBufferSizeRead;      // Offset:  336 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  340 Size:     4
//   int NumEventsPerParticle;          // Offset:  344 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  348 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  352 Size:     4 [unused]
//   uint SimStart;                     // Offset:  356 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  360 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  364 Size:     4
//   float MinTime_ScaleAlpha_FloatCurve;// Offset:  368 Size:     4
//   float MaxTime_ScaleAlpha_FloatCurve;// Offset:  372 Size:     4 [unused]
//   float InvTimeRange_ScaleAlpha_FloatCurve;// Offset:  376 Size:     4
//
// }
//
// cbuffer FEmitterParameters
// {
//
//   float Constants_Emitter_UniformRangedFloat006_Minimum;// Offset:    0 Size:     4
//   float Constants_Emitter_UniformRangedFloat006_Maximum;// Offset:    4 Size:     4
//   int Constants_Emitter_UniformRangedFloat006_RandomSeed;// Offset:    8 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   12 Size:     4 [unused]
//   int Engine_System_TickCount;       // Offset:   16 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat003_Minimum;// Offset:   20 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat003_Maximum;// Offset:   24 Size:     4 [unused]
//   int Constants_Emitter_UniformRangedFloat003_RandomSeed;// Offset:   28 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:   32 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:   36 Size:     4 [unused]
//   int Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:   40 Size:     4 [unused]
//   float4 Engine_Owner_Position;      // Offset:   48 Size:    16
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   64 Size:    16
//   float4 Constants_Emitter_InitializeParticle_SpriteSize;// Offset:   80 Size:    16 [unused]
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   96 Size:    16 [unused]
//   float Constants_Emitter_CalculateSizeByMass_ManuallyEnteredDensityASC40kgASC47mASC943ASC41;// Offset:  112 Size:     4 [unused]
//   float Constants_Emitter_CalculateSizeByMass_MassModulation;// Offset:  116 Size:     4
//   float4 Constants_Emitter_CalculateSizeByMass_SpriteSizeModulation;// Offset:  128 Size:    16
//   float Constants_Emitter_CalculateSizeByMass_Width;// Offset:  144 Size:     4
//   float Constants_Emitter_CalculateSizeByMass_Height;// Offset:  148 Size:     4
//   float Constants_Emitter_CalculateSizeByMass_Depth;// Offset:  152 Size:     4
//   float4 Constants_Emitter_CalculateSizeByMass_ModelProportions;// Offset:  160 Size:    16 [unused]
//   float4 Constants_Emitter_CalculateSizeByMass_InitialModelDimensions;// Offset:  176 Size:    16 [unused]
//   int Constants_Emitter_SphereLocation_RandomSeed;// Offset:  192 Size:     4 [unused]
//   float Constants_Emitter_SphereLocation_SurfaceOnlyBandThickness;// Offset:  196 Size:     4 [unused]
//   float Constants_Emitter_SphereLocation_SphereRadius;// Offset:  200 Size:     4
//   float4 Constants_Emitter_SphereLocation_NonUniformScale;// Offset:  208 Size:    16
//   float4 Constants_Emitter_SphereLocation_Offset;// Offset:  224 Size:    16
//   row_major float4x4 Engine_Owner_SystemWorldToLocalTransposed;// Offset:  240 Size:    64
//   row_major float4x4 Engine_Owner_SystemLocalToWorldTransposed;// Offset:  304 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  368 Size:    64
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  432 Size:    64 [unused]
//   float Constants_Emitter_UniformRangedFloat002_Minimum;// Offset:  496 Size:     4
//   float Constants_Emitter_UniformRangedFloat002_Maximum;// Offset:  500 Size:     4
//   int Constants_Emitter_UniformRangedFloat002_RandomSeed;// Offset:  504 Size:     4 [unused]
//   float4 Constants_Emitter_AddVelocityFromPoint_OriginOffset;// Offset:  512 Size:    16
//   float Constants_Emitter_AddVelocityFromPoint_VelocityFalloffDistance;// Offset:  528 Size:     4 [unused]
//   float Engine_DeltaTime;            // Offset:  532 Size:     4
//   float4 Constants_Emitter_GravityForce_Gravity;// Offset:  544 Size:    16
//   float Constants_Emitter_Drag_Drag; // Offset:  560 Size:     4
//   float Constants_Emitter_Drag_RotationalDrag;// Offset:  564 Size:     4 [unused]
//   float Constants_Emitter_FloatFromCurve001_ScaleCurve;// Offset:  568 Size:     4
//   float4 Constants_Emitter_ScaleColor_ScaleRGB;// Offset:  576 Size:    16
//   float Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  592 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  596 Size:     4 [unused]
//   float Engine_Time;                 // Offset:  600 Size:     4 [unused]
//   float Engine_InverseDeltaTime;     // Offset:  604 Size:     4
//   int Engine_ExecutionCount;         // Offset:  608 Size:     4 [unused]
//   float Emitter_SpawnRate;           // Offset:  612 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:  616 Size:     4
//   float PREV_Constants_Emitter_UniformRangedFloat006_Minimum;// Offset:  620 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat006_Maximum;// Offset:  624 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat006_RandomSeed;// Offset:  628 Size:     4 [unused]
//   int PREV_Emitter_RandomSeed;       // Offset:  632 Size:     4 [unused]
//   int PREV_Engine_System_TickCount;  // Offset:  636 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat003_Minimum;// Offset:  640 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat003_Maximum;// Offset:  644 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat003_RandomSeed;// Offset:  648 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:  652 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:  656 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:  660 Size:     4 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:  672 Size:    16
//   float4 PREV_Constants_Emitter_InitializeParticle_Color;// Offset:  688 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_SpriteSize;// Offset:  704 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_MeshScale;// Offset:  720 Size:    16 [unused]
//   float PREV_Constants_Emitter_CalculateSizeByMass_ManuallyEnteredDensityASC40kgASC47mASC943ASC41;// Offset:  736 Size:     4 [unused]
//   float PREV_Constants_Emitter_CalculateSizeByMass_MassModulation;// Offset:  740 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_CalculateSizeByMass_SpriteSizeModulation;// Offset:  752 Size:    16 [unused]
//   float PREV_Constants_Emitter_CalculateSizeByMass_Width;// Offset:  768 Size:     4 [unused]
//   float PREV_Constants_Emitter_CalculateSizeByMass_Height;// Offset:  772 Size:     4 [unused]
//   float PREV_Constants_Emitter_CalculateSizeByMass_Depth;// Offset:  776 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_CalculateSizeByMass_ModelProportions;// Offset:  784 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_CalculateSizeByMass_InitialModelDimensions;// Offset:  800 Size:    16 [unused]
//   int PREV_Constants_Emitter_SphereLocation_RandomSeed;// Offset:  816 Size:     4 [unused]
//   float PREV_Constants_Emitter_SphereLocation_SurfaceOnlyBandThickness;// Offset:  820 Size:     4 [unused]
//   float PREV_Constants_Emitter_SphereLocation_SphereRadius;// Offset:  824 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_SphereLocation_NonUniformScale;// Offset:  832 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_SphereLocation_Offset;// Offset:  848 Size:    16 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalTransposed;// Offset:  864 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldTransposed;// Offset:  928 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldNoScale;// Offset:  992 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalNoScale;// Offset: 1056 Size:    64 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat002_Minimum;// Offset: 1120 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat002_Maximum;// Offset: 1124 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat002_RandomSeed;// Offset: 1128 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_AddVelocityFromPoint_OriginOffset;// Offset: 1136 Size:    16 [unused]
//   float PREV_Constants_Emitter_AddVelocityFromPoint_VelocityFalloffDistance;// Offset: 1152 Size:     4 [unused]
//   float PREV_Engine_DeltaTime;       // Offset: 1156 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_GravityForce_Gravity;// Offset: 1168 Size:    16 [unused]
//   float PREV_Constants_Emitter_Drag_Drag;// Offset: 1184 Size:     4 [unused]
//   float PREV_Constants_Emitter_Drag_RotationalDrag;// Offset: 1188 Size:     4 [unused]
//   float PREV_Constants_Emitter_FloatFromCurve001_ScaleCurve;// Offset: 1192 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_ScaleColor_ScaleRGB;// Offset: 1200 Size:    16 [unused]
//   float PREV_Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset: 1216 Size:     4 [unused]
//   float PREV_Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset: 1220 Size:     4 [unused]
//   float PREV_Engine_Time;            // Offset: 1224 Size:     4 [unused]
//   float PREV_Engine_InverseDeltaTime;// Offset: 1228 Size:     4 [unused]
//   int PREV_Engine_ExecutionCount;    // Offset: 1232 Size:     4 [unused]
//   float PREV_Emitter_SpawnRate;      // Offset: 1236 Size:     4 [unused]
//   int PREV_Engine_Emitter_TotalSpawnedParticles;// Offset: 1240 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// CurveLUT_ScaleAlpha_FloatCurve    texture   float         buf             t2      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FEmitterParameters                cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[24], dynamicIndexed
dcl_constantbuffer CB1[43], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadID.x
dcl_temps 10
dcl_thread_group 64, 1, 1
iadd r0.x, vThreadID.x, cb0[20].x
ieq r0.y, cb0[22].z, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].zzzz, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r1.x, r0.y, cb0[20].w
iadd r0.z, r1.x, cb0[20].x
ult r0.z, r0.x, r0.z
if_nz r0.z
  ult r0.z, r0.x, r0.y
  if_nz r0.z
    ld_indexable(buffer)(float,float,float,float) r0.z, r0.xxxx, t0.yzxw
    imad r2.xyzw, l(5, 6, 7, 9), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r1.y, r2.xxxx, t0.wxyz
    ld_indexable(buffer)(float,float,float,float) r1.z, r2.yyyy, t0.wyxz
    ld_indexable(buffer)(float,float,float,float) r1.w, r2.zzzz, t0.wyzx
    ishl r3.xyzw, cb0[21].xyyy, l(3, 1, 2, 3)
    iadd r0.w, r0.x, r3.x
    ld_indexable(buffer)(float,float,float,float) r0.w, r0.wwww, t0.yzwx
    ld_indexable(buffer)(float,float,float,float) r2.x, r2.wwww, t0.xyzw
    imad r4.xyzw, l(10, 11, 13, 14), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r2.y, r4.xxxx, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r2.z, r4.yyyy, t0.yzxw
    ld_indexable(buffer)(float,float,float,float) r4.x, r4.zzzz, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r4.y, r4.wwww, t0.yxzw
    imad r5.xyzw, l(15, 19, 20, 21), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r4.z, r5.xxxx, t0.yzxw
    ld_indexable(buffer)(float,float,float,float) r2.w, r5.yyyy, t0.yzwx
    ld_indexable(buffer)(float,float,float,float) r3.x, r5.zzzz, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r4.w, r5.wwww, t0.yzwx
    imad r5.xyzw, l(22, 23, 24, 25), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r5.x, r5.xxxx, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r5.y, r5.yyyy, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r5.z, r5.zzzz, t0.yzxw
    ld_indexable(buffer)(float,float,float,float) r5.w, r5.wwww, t0.yzwx
    ld_indexable(buffer)(sint,sint,sint,sint) r6.x, r0.xxxx, t1.xyzw
    imad r6.yzw, l(0, 26, 27, 28), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r7.x, r6.yyyy, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r7.y, r6.zzzz, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r7.z, r6.wwww, t0.yzxw
    add r0.z, r0.z, cb1[33].y
    max r6.y, r2.x, l(0.000010)
    add r6.z, r6.y, l(-0.000100)
    lt r6.z, r0.z, r6.z
    div r6.y, r0.z, r6.y
    mul r8.xyz, r2.yyyy, cb1[34].xyzx
    add r6.w, r6.y, -cb0[23].x
    mul_sat r6.w, r6.w, cb0[23].z
    mul r7.w, r6.w, l(127.000000)
    round_ni r7.w, r7.w
    lt r8.w, r7.w, l(127.000000)
    add r9.x, r7.w, l(1.000000)
    mad r6.w, r6.w, l(127.000000), -r7.w
    ftou r7.w, r7.w
    ld_indexable(buffer)(float,float,float,float) r7.w, r7.wwww, t2.yzwx
    ftou r9.x, r9.x
    movc r8.w, r8.w, r9.x, l(127)
    ld_indexable(buffer)(float,float,float,float) r8.w, r8.wwww, t2.yzwx
    add r8.w, -r7.w, r8.w
    mad r6.w, r6.w, r8.w, r7.w
    mul r6.w, r6.w, cb1[35].z
    mul r9.xyz, r1.yzwy, cb1[36].xyzx
    mul r6.w, r0.w, r6.w
    max r7.w, r2.y, l(0.000100)
    div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
    mul r8.xyz, r8.xyzx, r7.wwww
    mul_sat r7.w, cb1[33].y, cb1[35].x
    mad r7.xyz, r8.xyzx, cb1[33].yyyy, r7.xyzx
    mad r7.xyz, -r7.wwww, r7.xyzx, r7.xyzx
    mad r4.xyz, r7.xyzx, cb1[33].yyyy, r4.xyzx
    ieq r6.z, r6.z, l(-1)
    if_nz r6.z
      imm_atomic_iadd r1.x, u2, cb0[22].w, l(1)
    endif 
    iadd r6.z, r1.x, cb0[20].x
    store_uav_typed u1.xyzw, r6.zzzz, r0.zzzz
    iadd r0.z, r1.x, cb0[21].y
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, r9.xxxx
    iadd r3.yzw, r1.xxxx, r3.yyzw
    iadd r3.yzw, r3.yyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r3.yyyy, r9.yyyy
    imad r0.z, l(3), cb0[21].y, r1.x
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, r9.zzzz
    store_uav_typed u1.xyzw, r3.zzzz, r6.wwww
    imad r8.xyzw, l(5, 6, 7, 9), cb0[21].yyyy, r1.xxxx
    iadd r8.xyzw, r8.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r8.xxxx, r1.yyyy
    store_uav_typed u1.xyzw, r8.yyyy, r1.zzzz
    store_uav_typed u1.xyzw, r8.zzzz, r1.wwww
    store_uav_typed u1.xyzw, r3.wwww, r0.wwww
    store_uav_typed u1.xyzw, r8.wwww, r2.xxxx
    imad r8.xyzw, l(10, 11, 12, 13), cb0[21].yyyy, r1.xxxx
    iadd r8.xyzw, r8.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r8.xxxx, r2.yyyy
    store_uav_typed u1.xyzw, r8.yyyy, r2.zzzz
    store_uav_typed u1.xyzw, r8.zzzz, r6.yyyy
    store_uav_typed u1.xyzw, r8.wwww, r4.xxxx
    imad r8.xyzw, l(14, 15, 17, 18), cb0[21].yyyy, r1.xxxx
    iadd r8.xyzw, r8.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r8.xxxx, r4.yyyy
    store_uav_typed u1.xyzw, r8.yyyy, r4.zzzz
    ishl r0.z, cb0[21].y, l(4)
    iadd r0.z, r1.x, r0.z
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, r7.xxxx
    store_uav_typed u1.xyzw, r8.zzzz, r7.yyyy
    store_uav_typed u1.xyzw, r8.wwww, r7.zzzz
    imad r8.xyzw, l(19, 20, 21, 22), cb0[21].yyyy, r1.xxxx
    iadd r8.xyzw, r8.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r8.xxxx, r2.wwww
    store_uav_typed u1.xyzw, r8.yyyy, r3.xxxx
    store_uav_typed u1.xyzw, r8.zzzz, r4.wwww
    store_uav_typed u1.xyzw, r8.wwww, r5.xxxx
    imad r2.xyzw, l(23, 24, 25, 26), cb0[21].yyyy, r1.xxxx
    iadd r2.xyzw, r2.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r2.xxxx, r5.yyyy
    store_uav_typed u1.xyzw, r2.yyyy, r5.zzzz
    store_uav_typed u1.xyzw, r2.zzzz, r5.wwww
    store_uav_typed u0.xyzw, r6.zzzz, r6.xxxx
    store_uav_typed u1.xyzw, r2.wwww, r7.xxxx
    imad r0.zw, l(0, 0, 27, 28), cb0[21].yyyy, r1.xxxx
    iadd r0.zw, r0.zzzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r0.zzzz, r7.yyyy
    store_uav_typed u1.xyzw, r0.wwww, r7.zzzz
  else 
    iadd r0.x, -r0.y, r0.x
    itof r0.y, r0.x
    ge r2.xyzw, r0.yyyy, cb0[10].xyzw
    and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
    dp4 r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
    ge r2.xyzw, r0.yyyy, cb0[11].xyzw
    and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
    dp4 r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
    ftoi r0.yz, r0.yyzy
    iadd r0.y, r0.y, r0.z
    iadd r0.z, r0.x, -cb0[r0.y + 12].w
    iadd r0.x, r0.x, cb1[38].z
    itof r0.z, r0.z
    mad r0.y, cb0[r0.y + 12].x, r0.z, cb0[r0.y + 12].y
    add r0.z, -r0.y, cb1[33].y
    mul r0.y, r0.y, cb1[37].w
    add r1.yzw, cb1[3].xxyz, -cb1[42].xxyz
    mad r1.yzw, r0.yyyy, r1.yyzw, cb1[42].xxyz
    add r0.y, -cb1[0].x, cb1[0].y
    imul null, r2.x, vThreadID.x, l(0x0019660d)
    imul null, r2.y, cb0[9].z, l(0x0019660d)
    iadd r2.xy, r2.xyxx, l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
    imad r3.xyzw, r2.xxxx, r2.xxxx, l(0x3c3c2745, 0x3beff51e, 0x3bd68f11, 0x3bbd2904)
    imad r4.xyzw, r2.yyyy, r3.xyzw, r2.xxxx
    imad r5.xyzw, r3.xyzw, r4.xyzw, r2.yyyy
    imad r6.xyzw, r4.xyzw, r5.xyzw, r2.xxxx
    imad r3.xyzw, r4.zxyw, r6.zxyw, r3.zxyw
    ishr r4.xyw, r3.yzyw, l(8, 8, 0, 8)
    and r4.xyw, r4.xyxw, l(0x00ffffff, 0x00ffffff, 0, 0x00ffffff)
    utof r4.xyw, r4.xyxw
    mul r0.y, r0.y, r4.x
    mad r0.y, r0.y, l(0.000000), cb1[0].x
    mul r0.y, r0.y, l(360.000000)
    mul r0.w, r4.y, l(0.000000)
    mul r2.z, cb1[7].y, l(8050.000000)
    add r2.w, cb1[9].y, cb1[9].x
    add r2.w, r2.w, cb1[9].z
    div r2.w, l(3.000000), r2.w
    mul r4.xy, r2.wwww, cb1[9].xyxx
    mul r4.xy, r4.xyxx, cb1[8].xyxx
    div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.z
    mul r2.zw, r2.zzzz, l(0.000000, 0.000000, 1000000.000000, 0.127324)
    log r2.zw, r2.zzzw
    mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.333333, 0.333333)
    exp r2.zw, r2.zzzw
    mul r4.xy, r2.zzzz, r4.xyxx
    mul r2.z, r2.w, r2.w
    imad r3.y, r5.z, r3.x, r4.z
    imad r3.z, r3.x, r3.y, r5.z
    ishr r3.xyz, r3.xyzx, l(8, 8, 8, 0)
    and r3.xyz, r3.xyzx, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0)
    utof r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000), l(0.000000, -1.000000, 0.000000, 0.000000)
    sincos r3.x, r5.x, r3.x
    mad r2.w, -r3.y, r3.y, l(1.000000)
    sqrt r2.w, r2.w
    mul r5.x, r2.w, r5.x
    mul r5.y, r2.w, r3.x
    log r2.w, r3.z
    mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.400000, 0.333333)
    exp r2.w, r2.w
    mov r5.z, r3.y
    mul r3.xyz, r2.wwww, r5.xyzx
    mul r3.xyz, r3.xyzx, cb1[12].zzzz
    mul r3.xyz, r3.xyzx, cb1[13].xyzx
    add r5.xyz, r1.yzwy, cb1[14].xyzx
    mul r6.xyz, r3.yyyy, cb1[16].xyzx
    mad r3.xyw, r3.xxxx, cb1[15].xyxz, r6.xyxz
    mad r3.xyz, r3.zzzz, cb1[17].xyzx, r3.xywx
    add r3.xyz, r3.xyzx, r5.xyzx
    add r2.w, -cb1[31].x, cb1[31].y
    mul r2.w, r2.w, r4.w
    mad r2.w, r2.w, l(0.000000), cb1[31].x
    mul r5.xyz, cb1[24].xyzx, cb1[32].yyyy
    mad r5.xyz, cb1[32].xxxx, cb1[23].xyzx, r5.xyzx
    mad r5.xyz, cb1[32].zzzz, cb1[25].xyzx, r5.xyzx
    add r1.yzw, r1.yyzw, r5.xxyz
    imad r3.w, r2.x, r2.x, l(0x3ba3c2f7)
    imad r4.z, r2.y, r3.w, r2.x
    imad r2.y, r3.w, r4.z, r2.y
    imad r2.x, r4.z, r2.y, r2.x
    imad r5.x, r4.z, r2.x, r3.w
    imad r5.y, r2.y, r5.x, r4.z
    ishr r2.xy, r5.xyxx, l(8, 8, 0, 0)
    and r2.xy, r2.xyxx, l(0x00ffffff, 0x00ffffff, 0, 0)
    utof r2.xy, r2.xyxx
    mad r5.xz, r2.xxyx, l(0.000000, 0.000000, 0.000000, 0.000000), l(0.000000, 0.000000, -1.000000, 0.000000)
    sincos r2.x, r6.x, r5.x
    mad r2.y, -r5.z, r5.z, l(1.000000)
    sqrt r2.y, r2.y
    mul r5.x, r2.y, r6.x
    mul r5.y, r2.y, r2.x
    add r6.xyz, -r1.yzwy, r3.xyzx
    dp3 r1.y, r6.xyzx, r6.xyzx
    sqrt r6.w, r1.y
    lt r1.y, r6.w, l(0.000010)
    mov r5.w, l(1.000000)
    movc r6.xyzw, r1.yyyy, r5.xyzw, r6.xyzw
    div r6.xyz, r6.xyzx, r6.wwww
    movc r1.yzw, r1.yyyy, r5.xxyz, r6.xxyz
    mul r1.yzw, r1.yyzw, r2.wwww
    lt r2.x, r0.z, l(0.999900)
    add r2.y, r0.z, -cb0[23].x
    mul_sat r2.y, r2.y, cb0[23].z
    mul r2.w, r2.y, l(127.000000)
    round_ni r2.w, r2.w
    lt r3.w, r2.w, l(127.000000)
    add r4.z, r2.w, l(1.000000)
    mad r2.y, r2.y, l(127.000000), -r2.w
    ftou r2.w, r2.w
    ld_indexable(buffer)(float,float,float,float) r2.w, r2.wwww, t2.yzwx
    ftou r4.z, r4.z
    movc r3.w, r3.w, r4.z, l(127)
    ld_indexable(buffer)(float,float,float,float) r3.w, r3.wwww, t2.yzwx
    add r3.w, -r2.w, r3.w
    mad r2.y, r2.y, r3.w, r2.w
    mul r2.y, r2.y, cb1[35].z
    mul r5.xyz, cb1[4].xyzx, cb1[36].xyzx
    mul r2.y, r2.y, cb1[4].w
    mul_sat r2.w, r0.z, cb1[35].x
    mad r1.yzw, cb1[34].xxyz, r0.zzzz, r1.yyzw
    mad r1.yzw, -r2.wwww, r1.yyzw, r1.yyzw
    mad r3.xyz, r1.yzwy, r0.zzzz, r3.xyzx
    ieq r2.x, r2.x, l(-1)
    if_nz r2.x
      imm_atomic_iadd r1.x, u2, cb0[22].w, l(1)
    endif 
    iadd r2.x, r1.x, cb0[20].x
    store_uav_typed u1.xyzw, r2.xxxx, r0.zzzz
    iadd r2.w, r1.x, cb0[21].y
    iadd r2.w, r2.w, cb0[20].x
    store_uav_typed u1.xyzw, r2.wwww, r5.xxxx
    ishl r6.xyzw, cb0[21].yyyy, l(1, 2, 3, 4)
    iadd r6.xyzw, r1.xxxx, r6.xyzw
    iadd r6.xyzw, r6.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r6.xxxx, r5.yyyy
    imad r7.xyzw, l(3, 5, 6, 7), cb0[21].yyyy, r1.xxxx
    iadd r7.xyzw, r7.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r7.xxxx, r5.zzzz
    store_uav_typed u1.xyzw, r6.yyyy, r2.yyyy
    store_uav_typed u1.xyzw, r7.yyyy, cb1[4].xxxx
    store_uav_typed u1.xyzw, r7.zzzz, cb1[4].yyyy
    store_uav_typed u1.xyzw, r7.wwww, cb1[4].zzzz
    store_uav_typed u1.xyzw, r6.zzzz, cb1[4].wwww
    imad r5.xyzw, l(9, 10, 11, 12), cb0[21].yyyy, r1.xxxx
    iadd r5.xyzw, r5.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r5.xxxx, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r5.yyyy, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r5.zzzz, r0.wwww
    store_uav_typed u1.xyzw, r5.wwww, r0.zzzz
    imad r5.xyzw, l(13, 14, 15, 17), cb0[21].yyyy, r1.xxxx
    iadd r5.xyzw, r5.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r5.xxxx, r3.xxxx
    store_uav_typed u1.xyzw, r5.yyyy, r3.yyyy
    store_uav_typed u1.xyzw, r5.zzzz, r3.zzzz
    store_uav_typed u1.xyzw, r6.wwww, r1.yyyy
    store_uav_typed u1.xyzw, r5.wwww, r1.zzzz
    imad r3.xyzw, l(18, 19, 20, 21), cb0[21].yyyy, r1.xxxx
    iadd r3.xyzw, r3.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r3.xxxx, r1.wwww
    store_uav_typed u1.xyzw, r3.yyyy, r2.zzzz
    store_uav_typed u1.xyzw, r3.zzzz, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r3.wwww, l(1.000000,1.000000,1.000000,1.000000)
    imad r3.xyzw, l(22, 23, 24, 25), cb0[21].yyyy, r1.xxxx
    iadd r3.xyzw, r3.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r3.xxxx, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r3.yyyy, r0.yyyy
    store_uav_typed u1.xyzw, r3.zzzz, r4.xxxx
    store_uav_typed u1.xyzw, r3.wwww, r4.yyyy
    store_uav_typed u0.xyzw, r2.xxxx, r0.xxxx
    imad r0.xyz, l(26, 27, 28, 0), cb0[21].yyyy, r1.xxxx
    iadd r0.xyz, r0.xyzx, cb0[20].xxxx
    store_uav_typed u1.xyzw, r0.xxxx, r1.yyyy
    store_uav_typed u1.xyzw, r0.yyyy, r1.zzzz
    store_uav_typed u1.xyzw, r0.zzzz, r1.wwww
  endif 
endif 
ret 
// Approximately 304 instruction slots used
